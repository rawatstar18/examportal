version: '3.8'  # Updated to a more recent version for better features

services:
  backend:
    container_name: backend-app
    image: backend-app:1.0
    environment:
      - NODE_ENV=docker
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - 5000:5000
    links:
      - mongodb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  mongodb:
    image: mongo:latest
    ports:
      - 27018:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo --username ${MONGO_INITDB_ROOT_USERNAME} --password ${MONGO_INITDB_ROOT_PASSWORD} mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - 8080:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb

  frontend:
    container_name: frontend-app
    image: frontend-app:1.0
    environment:
      - NODE_ENV=docker
      - REACT_APP_API_BASE_URL=http://backend:5000
    build: 
      context: frontend
      dockerfile: Dockerfile
    ports:
      - 3100:3000
    depends_on:
      - backend

  user-frontend:
    container_name: user-frontend-app
    image: user-frontend-app:1.0
    environment:
      - NODE_ENV=docker
      - REACT_APP_API_BASE_URL=http://backend:5000
    build:
      context: user-portal-frontend
      dockerfile: Dockerfile
    ports:
      - 3200:3000
    depends_on:
      - backend
      - frontend

volumes:
  mongo-data:
    driver: local

